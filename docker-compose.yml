version: "3"
services:
  redis:
    container_name: redis
    restart: always
    ports:
     - "6379:6379"
    image: redis
    networks:
      - web_network
  backend:
    container_name: backend
    restart: always
    build: Backend
    # command: >
    #   bash -c
    #   "
    #   dir /code
    #   sleep 20s &&
    #   cd  &&
    #   python manage.py makemigrations &&
    #   python manage.py migrate &&
    #   uwsgi --ini docker_test.ini"
    volumes:
      - .:/code
    expose:
      - "8001"
    ports:
      - "8001:8001"
    networks:
      - web_network
    command: bash -c "
      sleep 20s &&
      python /code/Backend/manage.py makemigrations &&
      python /code/Backend/manage.py makemigrations ml &&
      python /code/Backend/manage.py migrate &&
      python /code/Backend/manage.py migrate django_celery_results &&
      uwsgi -d --ini /code/Backend/config/docker_test.ini &&
      cd /code/Backend && 
      celery -A MLPlatform worker -l INFO" 
      # 前台防止docker退出
  nginx:
    container_name: nginx
    restart: always
    image: nginx:latest
    ports:
      - "8000:8000"
      # - "8001:8001"
    # volumes:
    #   - ./Backend/config/nginx:/etc/nginx/conf.d
    depends_on:
      - backend
    build: Frontend/ml-platform 
    expose:
      - "8000"
    networks:
      - web_network

networks:
  web_network:
    driver: bridge

volumes:
  static-volume: